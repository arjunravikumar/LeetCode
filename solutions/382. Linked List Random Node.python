# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    
    rootNode = None
​
    def __init__(self, head):
        """
        @param head The linked list's head.
        Note that the head is guaranteed to be not null, so it contains at least one node.
        :type head: ListNode
        """
        self.rootNode = head 
        
​
    def getRandom(self):
        """
        Returns a random node's value.
        :rtype: int
        """
        randVal = 1
        finalVal = 0
        current = self.rootNode
        while(current != None):
            locRand = random.random()
            if(randVal > locRand):
                randVal = locRand
                finalVal = current.val
            current = current.next
        return finalVal
        
        
​
​
# Your Solution object will be instantiated and called as such:
# obj = Solution(head)
# param_1 = obj.getRandom()
